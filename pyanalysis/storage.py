import pandas as pd
import logging
import boto3
from io import StringIO

logger = logging.getLogger(__name__)


def df_to_s3_csv(df: pd.DataFrame, bucket_name: str, file_name: str):
    try:
        logger.debug(f"Storing dataframe to S3 as: {bucket_name}/{file_name}")
        csv_buffer = StringIO()
        df.to_csv(csv_buffer)
        s3_resource = boto3.resource("s3")
        response = s3_resource.Object(bucket_name, file_name).put(
            Body=csv_buffer.getvalue()
        )
        logger.debug(response)

        logger.info(
            f"Stored to S3 bucket: {bucket_name}, Object name: {file_name}"
        )
    except Exception as e:
        logger.error(e)
        logger.error(f"Args: bucket_name={bucket_name}, file_name={file_name}")
        raise StorageError(" pyanalysis encountered an error ", e)


class StorageError(Exception):
    """Generic exception for the pyanalysis module used to wrap
    exceptions generated by dependencies.
    """

    def __init__(self, msg: str, original_exception: Exception):
        super(StorageError, self).__init__(f"{msg}: {original_exception}")
        self.original_exception = original_exception
